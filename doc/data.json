{
    "project": {},
    "files": {
        "../src/litegraph.js": {
            "name": "../src/litegraph.js",
            "modules": {},
            "classes": {
                "LiteGraph": 1,
                "LGraph": 1,
                "LGraphNode": 1,
                "LGraphCanvas": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "LiteGraph": {
            "name": "LiteGraph",
            "shortname": "LiteGraph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "pluginFor": [],
            "extensionFor": [],
            "file": "../src/litegraph.js",
            "line": 6,
            "description": "The Global Scope. It contains all the registered node classes.",
            "isConstructor": 1
        },
        "LGraph": {
            "name": "LGraph",
            "shortname": "LGraph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "pluginFor": [],
            "extensionFor": [],
            "file": "../src/litegraph.js",
            "line": 234,
            "description": "LGraph is the class that contain a full graph. We instantiate one and add nodes to it, and then we can run the execution loop.",
            "isConstructor": 1
        },
        "LGraphNode": {
            "name": "LGraphNode",
            "shortname": "LGraphNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "pluginFor": [],
            "extensionFor": [],
            "file": "../src/litegraph.js",
            "line": 1166,
            "description": "Base Class for all the node type classes",
            "params": [
                {
                    "name": "name",
                    "description": "a name for the node",
                    "type": "String"
                }
            ]
        },
        "LGraphCanvas": {
            "name": "LGraphCanvas",
            "shortname": "LGraphCanvas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "pluginFor": [],
            "extensionFor": [],
            "file": "../src/litegraph.js",
            "line": 2551,
            "description": "marks as dirty the canvas, this way it will be rendered again",
            "isConstructor": 1,
            "params": [
                {
                    "name": "canvas",
                    "description": "the canvas where you want to render (it accepts a selector in string format or the canvas itself)",
                    "type": "HTMLCanvas"
                },
                {
                    "name": "graph",
                    "description": "[optional]",
                    "type": "LGraph"
                }
            ],
            "itemtype": "method"
        }
    },
    "classitems": [
        {
            "file": "../src/litegraph.js",
            "line": 38,
            "description": "Register a node class so it can be listed when the user wants to create a new one",
            "itemtype": "method",
            "name": "registerNodeType",
            "params": [
                {
                    "name": "type",
                    "description": "name of the node and path",
                    "type": "String"
                },
                {
                    "name": "baseClass",
                    "description": "class containing the structure of a node",
                    "type": "Class"
                }
            ],
            "class": "LiteGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 71,
            "description": "Create a node of a given type with a name. The node is not attached to any graph yet.",
            "itemtype": "method",
            "name": "createNode",
            "params": [
                {
                    "name": "type",
                    "description": "full name of the node class. p.e. \"math/sin\"",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "a name to distinguish from other nodes",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "to set options",
                    "type": "Object"
                }
            ],
            "class": "LiteGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 112,
            "description": "Returns a registered node type with a given name",
            "itemtype": "method",
            "name": "getNodeType",
            "params": [
                {
                    "name": "type",
                    "description": "full name of the node class. p.e. \"math/sin\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the node class",
                "type": "Class"
            },
            "class": "LiteGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 125,
            "description": "Returns a list of node types matching one category",
            "itemtype": "method",
            "name": "getNodeType",
            "params": [
                {
                    "name": "category",
                    "description": "category name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "array with all the node classes",
                "type": "Array"
            },
            "class": "LiteGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 147,
            "description": "Returns a list with all the node type categories",
            "itemtype": "method",
            "name": "getNodeTypesCategories",
            "return": {
                "description": "array with all the names of the categories",
                "type": "Array"
            },
            "class": "LiteGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 258,
            "description": "Removes all nodes from this graph",
            "itemtype": "method",
            "name": "clear",
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 303,
            "description": "Attach Canvas to this graph",
            "itemtype": "method",
            "name": "attachCanvas",
            "params": [
                {
                    "name": "graphCanvas",
                    "description": "",
                    "type": "GraphCanvas"
                }
            ],
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 322,
            "description": "Detach Canvas from this graph",
            "itemtype": "method",
            "name": "detachCanvas",
            "params": [
                {
                    "name": "graphCanvas",
                    "description": "",
                    "type": "GraphCanvas"
                }
            ],
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 336,
            "description": "Starts running this graph every interval milliseconds.",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "interval",
                    "description": "amount of milliseconds between executions, default is 1",
                    "type": "Number"
                }
            ],
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 363,
            "description": "Stops the execution loop of the graph",
            "itemtype": "method",
            "name": "stop execution",
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 385,
            "description": "Run N steps (cycles) of the graph",
            "itemtype": "method",
            "name": "runStep",
            "params": [
                {
                    "name": "num",
                    "description": "number of steps to run, default is 1",
                    "type": "Number"
                }
            ],
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 429,
            "description": "Updates the graph execution order according to relevance of the nodes (nodes with only outputs have more relevance than\nnodes with only inputs.",
            "itemtype": "method",
            "name": "updateExecutionOrder",
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 527,
            "description": "Returns the amount of time the graph has been running in milliseconds",
            "itemtype": "method",
            "name": "getTime",
            "return": {
                "description": "number of milliseconds the graph has been running",
                "type": "Number"
            },
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 538,
            "description": "Returns the amount of time accumulated using the fixedtimeLapse var. This is used in context where the time increments should be constant",
            "itemtype": "method",
            "name": "getFixedTime",
            "return": {
                "description": "number of milliseconds the graph has been running",
                "type": "Number"
            },
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 549,
            "description": "Returns the amount of time it took to compute the latest iteration. Take into account that this number could be not correct\nif the nodes are using graphical actions",
            "itemtype": "method",
            "name": "getElapsedTime",
            "return": {
                "description": "number of milliseconds it took the last cycle",
                "type": "Number"
            },
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 561,
            "description": "Sends an event to all the nodes, useful to trigger stuff",
            "itemtype": "method",
            "name": "sendEventToAllNodes",
            "params": [
                {
                    "name": "eventname",
                    "description": "the name of the event (function to be called)",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "parameters in array format",
                    "type": "Array"
                }
            ],
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 596,
            "description": "Adds a new node instasnce to this graph",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "node",
                    "description": "the instance of the node",
                    "type": "LGraphNode"
                }
            ],
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 645,
            "description": "Removes a node from the graph",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "node",
                    "description": "the instance of the node",
                    "type": "LGraphNode"
                }
            ],
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 711,
            "description": "Returns a node by its id.",
            "itemtype": "method",
            "name": "getNodeById",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 723,
            "description": "Returns a list of nodes that matches a class",
            "itemtype": "method",
            "name": "findNodesByClass",
            "params": [
                {
                    "name": "classObject",
                    "description": "the class itself (not an string)",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "a list with all the nodes of this type",
                "type": "Array"
            },
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 739,
            "description": "Returns a list of nodes that matches a type",
            "itemtype": "method",
            "name": "findNodesByType",
            "params": [
                {
                    "name": "type",
                    "description": "the name of the node type",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a list with all the nodes of this type",
                "type": "Array"
            },
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 756,
            "description": "Returns a list of nodes that matches a name",
            "itemtype": "method",
            "name": "findNodesByName",
            "params": [
                {
                    "name": "name",
                    "description": "the name of the node to search",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a list with all the nodes with this name",
                "type": "Array"
            },
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 772,
            "description": "Returns the top-most node in this position of the canvas",
            "itemtype": "method",
            "name": "getNodeOnPos",
            "params": [
                {
                    "name": "x",
                    "description": "the x coordinate in canvas space",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y coordinate in canvas space",
                    "type": "Number"
                },
                {
                    "name": "nodesList",
                    "description": "a list with all the nodes to search from, by default is all the nodes in the graph",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "a list with all the nodes that intersect this coordinate",
                "type": "Array"
            },
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 959,
            "description": "Assigns a value to all the nodes that matches this name. This is used to create global variables of the node that\ncan be easily accesed from the outside of the graph",
            "itemtype": "method",
            "name": "setInputData",
            "params": [
                {
                    "name": "name",
                    "description": "the name of the node",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "value to assign to this node",
                    "type": "*"
                }
            ],
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 974,
            "description": "Returns the value of the first node with this name. This is used to access global variables of the graph from the outside",
            "itemtype": "method",
            "name": "setInputData",
            "params": [
                {
                    "name": "name",
                    "description": "the name of the node",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value of the node",
                "type": "*"
            },
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1011,
            "description": "returns if the graph is in live mode",
            "itemtype": "method",
            "name": "isLive",
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1044,
            "description": "Creates a Object containing all the info about this graph, it can be serialized",
            "itemtype": "method",
            "name": "serialize",
            "return": {
                "description": "value of the node",
                "type": "Object"
            },
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1077,
            "description": "Configure a graph from a JSON string",
            "itemtype": "method",
            "name": "configure",
            "params": [
                {
                    "name": "str",
                    "description": "configure a graph from a JSON string",
                    "type": "String"
                }
            ],
            "class": "LGraph"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1217,
            "description": "configure a node from an object containing the serialized info",
            "itemtype": "method",
            "name": "configure",
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1276,
            "description": "serialize the content",
            "itemtype": "method",
            "name": "serialize",
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1330,
            "description": "serialize and stringify",
            "itemtype": "method",
            "name": "toString",
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1342,
            "description": "get the title string",
            "itemtype": "method",
            "name": "getTitle",
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1355,
            "description": "sets the output data",
            "itemtype": "method",
            "name": "setOutputData",
            "params": [
                {
                    "name": "slot",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "*"
                }
            ],
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1376,
            "description": "retrieves the input data (data traveling through the connection) from one slot",
            "itemtype": "method",
            "name": "getInputData",
            "params": [
                {
                    "name": "slot",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "data or if it is not connected returns undefined",
                "type": "*"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1391,
            "description": "tells you if there is a connection in one input slot",
            "itemtype": "method",
            "name": "isInputConnected",
            "params": [
                {
                    "name": "slot",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1404,
            "description": "tells you info about an input connection (which node, type, etc)",
            "itemtype": "method",
            "name": "getInputInfo",
            "params": [
                {
                    "name": "slot",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "object or null",
                "type": "Object"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1420,
            "description": "tells you info about an output connection (which node, type, etc)",
            "itemtype": "method",
            "name": "getOutputInfo",
            "params": [
                {
                    "name": "slot",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "object or null",
                "type": "Object"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1436,
            "description": "tells you if there is a connection in one output slot",
            "itemtype": "method",
            "name": "isOutputConnected",
            "params": [
                {
                    "name": "slot",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1449,
            "description": "retrieves all the nodes connected to this output slot",
            "itemtype": "method",
            "name": "getOutputNodes",
            "params": [
                {
                    "name": "slot",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1478,
            "description": "add a new output slot to use in this node",
            "itemtype": "method",
            "name": "addOutput",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "string defining the output type (\"vec3\",\"number\",...)",
                    "type": "String"
                },
                {
                    "name": "extraInfo",
                    "description": "this can be used to have special properties of an output (label, special color, position, etc)",
                    "type": "Object"
                }
            ],
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1499,
            "description": "add a new output slot to use in this node",
            "itemtype": "method",
            "name": "addOutputs",
            "params": [
                {
                    "name": "array",
                    "description": "of triplets like [[name,type,extraInfo],[...]]",
                    "type": "Array"
                }
            ],
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1524,
            "description": "remove an existing output slot",
            "itemtype": "method",
            "name": "removeOutput",
            "params": [
                {
                    "name": "slot",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1538,
            "description": "add a new input slot to use in this node",
            "itemtype": "method",
            "name": "addInput",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "string defining the input type (\"vec3\",\"number\",...), it its a generic one use 0",
                    "type": "String"
                },
                {
                    "name": "extraInfo",
                    "description": "this can be used to have special properties of an input (label, color, position, etc)",
                    "type": "Object"
                }
            ],
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1561,
            "description": "add several new input slots in this node",
            "itemtype": "method",
            "name": "addInputs",
            "params": [
                {
                    "name": "array",
                    "description": "of triplets like [[name,type,extraInfo],[...]]",
                    "type": "Array"
                }
            ],
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1586,
            "description": "remove an existing input slot",
            "itemtype": "method",
            "name": "removeInput",
            "params": [
                {
                    "name": "slot",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1600,
            "description": "add an special connection to this node (used for special kinds of graphs)",
            "itemtype": "method",
            "name": "addConnection",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "string defining the input type (\"vec3\",\"number\",...)",
                    "type": "String"
                },
                {
                    "name": "pos",
                    "description": "position of the connection inside the node",
                    "type": "[x,y]"
                },
                {
                    "name": "direction",
                    "description": "if is input or output",
                    "type": "String"
                }
            ],
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1613,
            "description": "computes the size of a node according to its inputs and output slots",
            "itemtype": "method",
            "name": "computeSize",
            "params": [
                {
                    "name": "minHeight",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the total size",
                "type": "Number"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1664,
            "description": "returns the bounding of the object, used for rendering purposes",
            "itemtype": "method",
            "name": "getBounding",
            "return": {
                "description": "the total size",
                "type": "Float32Array[4]"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1674,
            "description": "checks if a point is inside the shape of a node",
            "itemtype": "method",
            "name": "isPointInsideNode",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1698,
            "description": "checks if a point is inside a node slot, and returns info about which slot",
            "itemtype": "method",
            "name": "getSlotInPosition",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "if found the object contains { input|output: slot object, slot: number, linkPos: [x,y] }",
                "type": "Object"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1729,
            "description": "returns the input slot with a given name (used for dynamic slots), -1 if not found",
            "itemtype": "method",
            "name": "findInputSlot",
            "params": [
                {
                    "name": "name",
                    "description": "the name of the slot",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the slot (-1 if not found)",
                "type": "Number"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1744,
            "description": "returns the output slot with a given name (used for dynamic slots), -1 if not found",
            "itemtype": "method",
            "name": "findOutputSlot",
            "params": [
                {
                    "name": "name",
                    "description": "the name of the slot",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the slot (-1 if not found)",
                "type": "Number"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1759,
            "description": "connect this node output to the input of another node",
            "itemtype": "method",
            "name": "connect",
            "params": [
                {
                    "name": "slot",
                    "description": "(could be the number of the slot or the string with the name of the slot)",
                    "type": "NumberOrString"
                },
                {
                    "name": "node",
                    "description": "the target node",
                    "type": "LGraphNode"
                },
                {
                    "name": "targetSlot",
                    "description": "the input slot of the target node (could be the number of the slot or the string with the name of the slot)",
                    "type": "NumberOrString"
                }
            ],
            "return": {
                "description": "if it was connected succesfully",
                "type": "Boolean"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1855,
            "description": "disconnect one output to an specific node",
            "itemtype": "method",
            "name": "disconnectOutput",
            "params": [
                {
                    "name": "slot",
                    "description": "(could be the number of the slot or the string with the name of the slot)",
                    "type": "NumberOrString"
                },
                {
                    "name": "targetNode",
                    "description": "the target node to which this slot is connected [Optional, if not targetNode is specified all nodes will be disconnected]",
                    "type": "LGraphNode"
                }
            ],
            "return": {
                "description": "if it was disconnected succesfully",
                "type": "Boolean"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1927,
            "description": "disconnect one input",
            "itemtype": "method",
            "name": "disconnectInput",
            "params": [
                {
                    "name": "slot",
                    "description": "(could be the number of the slot or the string with the name of the slot)",
                    "type": "NumberOrString"
                }
            ],
            "return": {
                "description": "if it was disconnected succesfully",
                "type": "Boolean"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 1989,
            "description": "returns the center of a connection point in canvas coords",
            "itemtype": "method",
            "name": "getConnectionPos",
            "params": [
                {
                    "name": "isInput",
                    "description": "true if if a input slot, false if it is an output",
                    "type": "Boolean"
                },
                {
                    "name": "slot",
                    "description": "(could be the number of the slot or the string with the name of the slot)",
                    "type": "NumberOrString"
                }
            ],
            "return": {
                "description": "the position",
                "type": "[x,y]"
            },
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 2121,
            "description": "Collapse the node to make it smaller on the canvas",
            "itemtype": "method",
            "name": "collapse",
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 2134,
            "description": "Forces the node to do not move or realign on Z",
            "itemtype": "method",
            "name": "pin",
            "class": "LGraphNode"
        },
        {
            "file": "../src/litegraph.js",
            "line": 2192,
            "description": "clears all the data inside",
            "itemtype": "method",
            "name": "clear",
            "class": "LGraphCanvas"
        },
        {
            "file": "../src/litegraph.js",
            "line": 2248,
            "description": "assigns a graph, you can reasign graphs to the same canvas",
            "itemtype": "method",
            "name": "setGraph",
            "params": [
                {
                    "name": "graph",
                    "description": "",
                    "type": "LGraph"
                }
            ],
            "class": "LGraphCanvas"
        },
        {
            "file": "../src/litegraph.js",
            "line": 2279,
            "description": "opens a graph contained inside a node in the current graph",
            "itemtype": "method",
            "name": "openSubgraph",
            "params": [
                {
                    "name": "graph",
                    "description": "",
                    "type": "LGraph"
                }
            ],
            "class": "LGraphCanvas"
        },
        {
            "file": "../src/litegraph.js",
            "line": 2306,
            "description": "closes a subgraph contained inside a node",
            "itemtype": "method",
            "name": "closeSubgraph",
            "params": [
                {
                    "name": "assigns",
                    "description": "a graph",
                    "type": "LGraph"
                }
            ],
            "class": "LGraphCanvas"
        },
        {
            "file": "../src/litegraph.js",
            "line": 2321,
            "description": "assigns a canvas",
            "itemtype": "method",
            "name": "setCanvas",
            "params": [
                {
                    "name": "assigns",
                    "description": "a canvas",
                    "type": "Canvas"
                }
            ],
            "class": "LGraphCanvas"
        },
        {
            "file": "../src/litegraph.js",
            "line": 2567,
            "description": "Used to attach the canvas in a popup",
            "itemtype": "method",
            "name": "getCanvasWindow",
            "return": {
                "description": "returns the window where the canvas is attached (the DOM root node)",
                "type": "Window"
            },
            "class": "LGraphCanvas"
        },
        {
            "file": "../src/litegraph.js",
            "line": 2579,
            "description": "starts rendering the content of the canvas when needed",
            "itemtype": "method",
            "name": "startRendering",
            "class": "LGraphCanvas"
        },
        {
            "file": "../src/litegraph.js",
            "line": 2602,
            "description": "stops rendering the content of the canvas (to save resources)",
            "itemtype": "method",
            "name": "stopRendering",
            "class": "LGraphCanvas"
        }
    ],
    "warnings": []
}